/*
 * This file is generated by jOOQ.
 */
package com.larscheng.www.jooq.tables;


import com.larscheng.www.jooq.Indexes;
import com.larscheng.www.jooq.Keys;
import com.larscheng.www.jooq.Students;
import com.larscheng.www.jooq.tables.records.CelebrityRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Celebrity extends TableImpl<CelebrityRecord> {

    private static final long serialVersionUID = -553932297;

    /**
     * The reference instance of <code>students.celebrity</code>
     */
    public static final Celebrity CELEBRITY = new Celebrity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CelebrityRecord> getRecordType() {
        return CelebrityRecord.class;
    }

    /**
     * The column <code>students.celebrity.id</code>.
     */
    public final TableField<CelebrityRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>students.celebrity.first_name</code>.
     */
    public final TableField<CelebrityRecord, String> FIRST_NAME = createField(DSL.name("first_name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>students.celebrity.last_name</code>.
     */
    public final TableField<CelebrityRecord, String> LAST_NAME = createField(DSL.name("last_name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>students.celebrity.date_of_birth</code>.
     */
    public final TableField<CelebrityRecord, LocalDate> DATE_OF_BIRTH = createField(DSL.name("date_of_birth"), org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>students.celebrity.birth_place</code>.
     */
    public final TableField<CelebrityRecord, String> BIRTH_PLACE = createField(DSL.name("birth_place"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * Create a <code>students.celebrity</code> table reference
     */
    public Celebrity() {
        this(DSL.name("celebrity"), null);
    }

    /**
     * Create an aliased <code>students.celebrity</code> table reference
     */
    public Celebrity(String alias) {
        this(DSL.name(alias), CELEBRITY);
    }

    /**
     * Create an aliased <code>students.celebrity</code> table reference
     */
    public Celebrity(Name alias) {
        this(alias, CELEBRITY);
    }

    private Celebrity(Name alias, Table<CelebrityRecord> aliased) {
        this(alias, aliased, null);
    }

    private Celebrity(Name alias, Table<CelebrityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Celebrity(Table<O> child, ForeignKey<O, CelebrityRecord> key) {
        super(child, key, CELEBRITY);
    }

    @Override
    public Schema getSchema() {
        return Students.STUDENTS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CELEBRITY_PRIMARY);
    }

    @Override
    public UniqueKey<CelebrityRecord> getPrimaryKey() {
        return Keys.KEY_CELEBRITY_PRIMARY;
    }

    @Override
    public List<UniqueKey<CelebrityRecord>> getKeys() {
        return Arrays.<UniqueKey<CelebrityRecord>>asList(Keys.KEY_CELEBRITY_PRIMARY);
    }

    @Override
    public Celebrity as(String alias) {
        return new Celebrity(DSL.name(alias), this);
    }

    @Override
    public Celebrity as(Name alias) {
        return new Celebrity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Celebrity rename(String name) {
        return new Celebrity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Celebrity rename(Name name) {
        return new Celebrity(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, LocalDate, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
